name: on-label-staging-pull-request

on:
    pull_request:
      types: 
        - labeled 

jobs:
    build-preview:
      if: ${{ github.event.label.name == 'approve-staging' }}
      name: Build Staging Artifacts
      environment: 
        name: preview
      runs-on: ubuntu-latest
  
      steps:
        - name: Relabel Pull Request
          id: labelPr
          uses: jburgess/AddRemovePrLabels@v1.0.4
          with:
            githubToken: ${{ github.token }}
            labelsToRemove: approve-production

        - name: Checkout
          uses: actions/checkout@v4
  
        - name: Setup NodeJS
          uses: actions/setup-node@v2
          with:
            node-version: 18 # Use Node.js 18 her

        - name: Install NodeJS Dependencies
          run: npm install
  
        - name: Build Static App
          env: 
            REACT_APP_DOCUSAURUS_BASE_URL: ${{ vars.DOCUSAURUS_BASE_URL }}
          run: npm run build
    
        - name: Login to Container Registry
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
          
        - name: Setup Docker Buildx
          id: buildx
          uses: docker/setup-buildx-action@v3
        
        - name: Get Commit Hash
          id: commit_hash
          uses: prompt/actions-commit-hash@v3

        - name: Build and Push (Docker Image)
          id: docker_build 
          uses: docker/build-push-action@v2
          with: 
            context: ./
            file: ./Dockerfile
            push: true
            tags: |
              ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMG_NAME }}:${{ vars.APP_VERSION }}.${{github.run_number}}-${{ steps.commit_hash.outputs.short }}-preview

    update-helm-charts:
      if: ${{ github.event.label.name == 'approve-staging' }}
      name: Update Staging Charts
      needs: [build-preview]
      environment: preview
      runs-on: ubuntu-latest

      steps:
        - name: Get Commit Hash
          id: commit_hash
          uses: prompt/actions-commit-hash@v3

        - name: Show Commit Hash Digest
          run: echo ${{ steps.commit_hash.outputs.short }}

        - name: Configure Git User as GitHub Actions Bot
          run: |
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
        - name: Update Charts and Commit Changes
          id: update_charts
          run: echo "test"